<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>css-framework</title>
      <link href="/2020/07/07/css-framework/"/>
      <url>/2020/07/07/css-framework/</url>
      
        <content type="html"><![CDATA[<h2 id="初入前端，不得不认识的一些知识"><a href="#初入前端，不得不认识的一些知识" class="headerlink" title="初入前端，不得不认识的一些知识"></a>初入前端，不得不认识的一些知识</h2><p>​        网上看了很多教程，都一开始就介绍HTML，CSS，Javascript三剑客。然后一个一个标签讲HTML，适当的时候引入CSS语法，我不认为这是一种好的讲法。首先HTML(Hyper Text Markup Language)作为一种标记语言，对标签的认识都是非常自然的，它甚至不是一门编程语言，完全不需要一个一个标签地讲。后来看过一个个人博客的模板的HTML的源码，其中常用的都是<code>&lt;div&gt;</code>和<code>&lt;a&gt;</code>等标签，重要的往往是CSS部分。我们写文章的时候，结构往往是千篇一律的，但写出来的效果却千差万别。HTML写的是结构，CSS是美化，JavaScript是动作。所以CSS非常重要。</p><p>​        与之相悖的是，CSS的语法非常简单，它被设计的时候甚至没考虑到互联网会如此地发达，网页代码量会有如此庞大的规模，它的语法其实就一句话<code>selector {property: value;}</code>整个CSS就是对HTML每个标签或者类进行定制，达到美化的效果。我看了那个个人博客的CSS源码，我当时差点想离前端远点，写这么无聊的东西有什么意思。CSS简直跟我们常见的数据描述语言差不多，比如YAML和JSON。后来，我认识到，CSS也是有框架的，前人已经在实践中将自己的美化操作构建成了一套系统，这将会大大减少网页设计中的压力，大大提高了网页设计的效率，</p><p>​        为什么学前端一开始就要考虑用一个CSS框架，因为你要先玩起来，编程也是这样，如果不先玩起来的话，根本没有全局意识，会非常迷茫而且无趣。下面我选择了三个CSS框架，体验一下在框架下进行前端开发，并且巩固一下自己似懂非懂的HTML知识。</p><h3 id="bootstrap"><a href="#bootstrap" class="headerlink" title="bootstrap"></a>bootstrap</h3><p>详细介绍和开发文档参考<a href="https://getbootstrap.com/" target="_blank" rel="noopener">官网</a>，该框架是第一个推广“智能手机优先”理念的框架。Bootstrap是世界上最流行的CSS框架，它于2011年由Twitter引入。Twitter开发并使用的，所以长期可靠。而且发展了这么久，生态系统也相对庞大。下载和文档见官网。</p><h3 id="Foundation"><a href="#Foundation" class="headerlink" title="Foundation"></a>Foundation</h3><p><a href="https://get.foundation/" target="_blank" rel="noopener">Foundation</a>是世界上另一个使用最广泛的一流CSS框架。许多公司（例如Facebook，eBay，Mozilla，Adobe甚至Disney）都使用它。该框架是基于Saas（如引导程序）构建的。它更加复杂，灵活并且易于定制。它也带有CLI，因此很容易与模块捆绑器一起使用。它提供了Fastclick.js工具，可在移动设备上更快地呈现。 </p><h3 id="Semantic-UI"><a href="#Semantic-UI" class="headerlink" title="Semantic UI"></a>Semantic UI</h3><p><a href="https://semantic-ui.com/" target="_blank" rel="noopener">Semantic UI</a>以其令人难以置信的主题效果以及简单优雅的设计而闻名。<strong>语义UI</strong>是使用人类友好的HTML的响应框架，它允许您创建一个独特而美观的网站，而无需进行多次更改。它提供3000多个主题变量和50多个UI组件。它还支持第三方库，如React，Meteor，Ember等。 </p><h3 id="体验一下这三个CSS框架"><a href="#体验一下这三个CSS框架" class="headerlink" title="体验一下这三个CSS框架"></a>体验一下这三个CSS框架</h3><p>先把他们下载下来。先体验一下<strong>Semantic UI</strong>，今天先尝试这个是因为它的语义UI，更接近自然语言，所以上手应该比较快。先摆上<a href="https://semantic-ui.com/introduction/getting-started.html" target="_blank" rel="noopener">文档</a>，然后开始。</p><p>$\int_{birth}^{death}Life dt = Programing$</p>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/07/06/hello-world/"/>
      <url>/2020/07/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
